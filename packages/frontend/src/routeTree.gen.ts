/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VoteRouteImport } from './routes/vote'
import { Route as ScholarshipsRouteImport } from './routes/scholarships'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'

const VoteRoute = VoteRouteImport.update({
  id: '/vote',
  path: '/vote',
  getParentRoute: () => rootRouteImport,
} as any)
const ScholarshipsRoute = ScholarshipsRouteImport.update({
  id: '/scholarships',
  path: '/scholarships',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/scholarships': typeof ScholarshipsRoute
  '/vote': typeof VoteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/scholarships': typeof ScholarshipsRoute
  '/vote': typeof VoteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/scholarships': typeof ScholarshipsRoute
  '/vote': typeof VoteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/scholarships' | '/vote'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/scholarships' | '/vote'
  id: '__root__' | '/' | '/dashboard' | '/scholarships' | '/vote'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  ScholarshipsRoute: typeof ScholarshipsRoute
  VoteRoute: typeof VoteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/vote': {
      id: '/vote'
      path: '/vote'
      fullPath: '/vote'
      preLoaderRoute: typeof VoteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/scholarships': {
      id: '/scholarships'
      path: '/scholarships'
      fullPath: '/scholarships'
      preLoaderRoute: typeof ScholarshipsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  ScholarshipsRoute: ScholarshipsRoute,
  VoteRoute: VoteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
